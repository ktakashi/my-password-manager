openapi: 3.1.0
info:
  title: Secure Storage Service - API
  version: 0.0.1
  description: |-
    Secure Storage Service APIs
servers: 
  - url: http://localhost 
paths:
  /{pseudonym}/contents:
    get:
      summary: Retrieve all contents of the user associated to {pseudonym}
      parameters:
        - $ref: '#/components/parameters/Pseudonym'
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentList'
        '500':
          $ref: '#/components/responses/ErrorResponse'
    post:
      summary: Create secure content of the user associated to {pseudonym}
      parameters: 
        - $ref: "#/components/parameters/Pseudonym"
      requestBody:
        $ref: '#/components/requestBodies/ContentRequest'
      responses:
        '201':
          description: Successful response
          headers:
            Location:
              required: true
              description: Location of the created resource
              schema:
                type: string

  /{pseudonym}/contents/{content-id}:
    get:
      summary: Get a content whose ID is {content-id}
      parameters:
        - $ref: "#/components/parameters/Pseudonym"
        - $ref: "#/components/parameters/ContentId"
      responses:
        '200':
          $ref: '#/components/responses/SuccessfulContentResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
    put:
      summary: Update a content whose ID is {content-id}
      parameters:
        - $ref: "#/components/parameters/Pseudonym"
        - $ref: "#/components/parameters/ContentId"
      requestBody:
        $ref: '#/components/requestBodies/ContentRequest'
      responses:
        '200':
          $ref: '#/components/responses/SuccessfulContentResponse'
        '404':
          $ref: '#/components/responses/404ErrorResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
components:
  parameters:
    Pseudonym:
      name: pseudonym
      description: Pseudonym of a user
      required: true
      in: path
      style: simple
      schema:
        type: string
    Fields:
      name: fields
      description: A comma separated list of content fields, e.g. id
      required: false
      in: query
      style: simple
      schema:
        type: string
    ContentId:
      name: content-id
      deprecated: Content ID
      required: true
      in: path
      style: simple
      schema: 
        $ref: "#/components/schemas/ContentId"
  requestBodies:
    ContentRequest:
      description: Secure content
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContentRequest'
  responses:
    SuccessfulContentResponse:
      description: Successful response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Content'
    404ErrorResponse:
      description: Content of ID {content-id} not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            404:
              summary: 404 error example
    ErrorResponse:
      description: Any error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            error:
              summary: Any error example
  schemas:
    ContentList:
      type:
        - array
      items:
        $ref: '#/components/schemas/Content'
    ContentRequest:
      type:
        - object
      required:
        - keyId
        - content
      properties:
        keyId:
          type:
            - string
          description: Client encryption key ID provided by KMS
        content:
          $ref: '#/components/schemas/Content'
    Content:
      description: Encrypted content
      type:
       - string
      contentEncoding: base64
    ContentId:
      type:
        - string
    Error:
      type:
        - object
      description: RFC 7807 error object
      properties:
        type:
          type:
            - string
        title:
          type:
            - string
        status:
          type:
            - integer
        detail:
          type:
            - string
