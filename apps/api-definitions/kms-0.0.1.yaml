openapi: 3.1.0
info:
  title: Key Management System - API
  version: 0.0.1
  description: |-
    Key Management System APIs
paths:
  /keys/exchange:
    post:
      summary: Ephemeral secret key exchange
      requestBody:
        description: Key exchange request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KeyExchangeRequest"
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KeyExchangeResponse"
  /recrypt:
    post:
      summary: Decrypt then Encrypt request
      requestBody:
        description: Recrypt request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RecryptRequest"
      responses:
        200:
          description: Successful response
          content:
            application:json:
              schema:
                $ref: "#/components/schemas/EncryptedContent"

components:
  schemas:
    KeyExchangeRequest:
      type: object
      required:
        - publicKey
        - keyLength
      properties:
        publicKey:
          $ref: "#/components/schemas/PublicKey"
        keyLength:
          type: integer
          examples: 
            - 32
    KeyExchangeResponse:
      type: object
      required:
        - keyId
        - publicKey
      properties:
        keyId:
          $ref: "#/components/schemas/KeyId"
        publicKey:
          $ref: "#/components/schemas/PublicKey"
    RecryptRequest:
      type: object
      properties:
        decryptionAlgorithm:
          $ref: "#/components/schemas/EncryptionAlgorithm"
        encryptionAlgorithm:
          $ref: "#/components/schemas/EncryptionAlgorithm"
        content:
          $ref: "#/components/schemas/EncryptedContent"
    EncryptionAlgorithm:
      type: object
      required:
        - keyId
        - encryptionScheme
      properties:
        keyId:
          $ref: "#/components/schemas/KeyId"
        encryptionScheme:
          $ref: "#/components/schemas/EncryptionScheme"
        parameter:
          $ref: "#/components/schemas/CipherParameter"
    CipherParameter:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/EncryptionMode"
        value:
          oneOf:
            - $ref: "#/components/schemas/CBCModeParameter"
            - $ref: "#/components/schemas/CTRModeParameter"
            - $ref: "#/components/schemas/GCMModeParameter"
    CBCModeParameter:
      allOf:
        - $ref: "#/components/schemas/IVParameter"
    CTRModeParameter:
      allOf:
        - $ref: "#/components/schemas/IVParameter"
        - $ref: "#/components/schemas/CtrParameter"
    GCMModeParameter:
      allOf:
        - $ref: "#/components/schemas/IVParameter"
        - $ref: "#/components/schemas/AadParameter"
    IVParameter:
      type: object
      required:
        - iv
      properties:
        iv:
          $ref: "#/components/schemas/BinaryValue"
    CtrParameter:
      type: object
      required:
        - mode
      properties:
        mode:
          $ref: "#/components/schemas/CounterMode"
    AadParameter:
      type: object
      properties:
        aad:
          $ref: "#/components/schemas/BinaryValue"
    PublicKey:
      $ref: "#/components/schemas/BinaryValue"
    EncryptedContent:
      $ref: "#/components/schemas/BinaryValue"
    EncryptionScheme:
      type: string
      enum:
        - AES
    EncryptionMode:
      type: string
      enum:
        - ECB
        - CBC
        - CTR
        - GCM
    CounterMode:
      type: string
      enum:
        - big
        - little
    KeyId:
      type: string
    BinaryValue:
      type: string
      contentEncoding: base64
